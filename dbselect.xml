<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<command>
	<name>dbselect</name>
	<description>
		<![CDATA[Description:
  perform various select queries and writes result to a serialized file.
Type 'dbselect <command> -h' to get the help for the specified command.

Examples:
  dbselect -i myportfolio regular transaction_new tran_id date price quantity commission
  dbselect myportfolio unmatched -mticker -c2 -ksecurity_name,ticker transaction_new security
  dbselect myportfolio unmatched transaction_new action
  dbselect -i myportfolio matched -mticker transaction_new tran_id security security_id
  dbselect -i myportfolio matched transaction_new tran_id action action_id]]>
	</description>
	<version>1.0.0</version>
	<option name="quiet">
		<short_name>-q</short_name>
		<long_name>--quiet</long_name>
		<description>supress verbose output</description>
		<action>StoreFalse</action>
	</option>
	<option name="debug">
		<short_name>-d</short_name>
		<long_name>--debug</long_name>
		<description>enables debug mode, displays the options and arguments passed to the parser</description>
		<action>StoreTrue</action>
	</option>
	<option name="variable">
		<short_name>-v</short_name>
		<long_name>--var</long_name>
		<description>enables variable mode, displays the value of all program variables</description>
		<action>StoreTrue</action>
	</option>
	<option name="test">
		<short_name>-t</short_name>
		<long_name>--test</long_name>
		<description>enables test mode, prints selection to the screen without writing file to disk</description>
		<action>StoreTrue</action>
	</option>
	<option name="join">
		<short_name>-i</short_name>
		<long_name>--join</long_name>
		<description>enables join mode, writes file in a format that can be joined with additional results</description>
		<action>StoreTrue</action>
	</option>
	<option name="join_dir">
		<short_name>-j</short_name>
		<long_name>--jdir</long_name>
		<description>name of dir you wish to save join files to, defaults to './join_files' </description>
		<action>StoreString</action>
		<help_name>/path/to/dir</help_name>
	</option>
	<option name="output_dir">
		<short_name>-o</short_name>
		<long_name>--odir</long_name>
		<description>name of dir you wish to save output file to, defaults to './out_files'</description>
		<action>StoreString</action>
		<help_name>/path/to/dir</help_name>
	</option>
	<option name="dest_table">
		<short_name>-d</short_name>
		<long_name>--dest</long_name>
		<description>name of the destination table to insert into, defaults to &lt;needle_table&gt;</description>
		<action>StoreString</action>
		<help_name>table_name</help_name>
	</option>
	<argument name="database">
		<description>name of the database</description>
	</argument>
	<command>
		<name>regular</name>
		<description>performs a regular select query to display needle columns in needle table.</description>
		<argument name="needle_table">
			<description>name of table containing desired columns</description>
		</argument>
		<argument name="column_w_keys">
			<description>name of column containing the primary keys</description>
		</argument>
		<argument name="needle_columns">
			<description>list of desired columns</description>
			<multiple>true</multiple>
		</argument>
	</command>
	<command>
		<name>matched</name>
		<description>performs a select query replacing needle values in a needle table with replacement values in haystack table.</description>
		<option name="needle_column">
			<short_name>-l</short_name>
			<long_name>--column1</long_name>
			<description>name of column in &lt;needle_table&gt; containing the needle values, defaults to &lt;haystack_table&gt;</description>
			<action>StoreString</action>
			<help_name>column_name</help_name>
		</option>
		<option name="needle_column2">
			<short_name>-m</short_name>
			<long_name>--column2</long_name>
			<description>name of column in &lt;haystack_table&gt; containing the needle values, defaults to &lt;haystack_table&gt;</description>
			<action>StoreString</action>
			<help_name>column_name</help_name>
		</option>
		<argument name="haystack_table">
			<description>name of the table containing replacement values</description>
		</argument>
		<argument name="needle_table">
			<description>name of table containing the values you wish to replace</description>
		</argument>
		<argument name="column_w_keys">
			<description>name of column in &lt;needle_table&gt; containing the primary keys</description>
		</argument>
		<argument name="replacement_column">
			<description>name of the column in &lt;haystack_table&gt; containing the replacement values</description>
		</argument>
	</command>
	<command>
		<name>unmatched</name>
		<description>performs a select query to display needle values in a haystack table not present in the needle table</description>
		<example>performs a select query to display needle values in a haystack table not present in the needle table</example>
		<option name="needle_column">
			<short_name>-l</short_name>
			<long_name>--column1</long_name>
			<description>name of column in &lt;haystack_table&gt; containing desired values, defaults to &lt;needle_table&gt;</description>
			<action>StoreString</action>
			<help_name>column_name</help_name>
		</option>
		<option name="needle_column2">
			<short_name>-m</short_name>
			<long_name>--column2</long_name>
			<description>name of column in &lt;needle_table&gt; missing the needle values, defaults to &lt;needle_table&gt;</description>
			<action>StoreString</action>
			<help_name>column_name</help_name>
		</option>
		<option name="copies">
			<short_name>-c</short_name>
			<long_name>--copies</long_name>
			<description>number of times to repeat missing value (useful if the needle table has multiple required columns and requires the use if the -k option)</description>
			<action>StoreInt</action>
			<default>1</default>
			<help_name>#</help_name>
		</option>
		<option name="keys">
			<short_name>-k</short_name>
			<long_name>--keys</long_name>
			<description>comma seperated list of names to use as headers (required if the -c option is specified and must contain the same number of items)</description>
			<action>StoreString</action>
			<help_name>key1,key2...</help_name>
		</option>
		<argument name="haystack_table">
			<description>name of table containing desired values</description>
		</argument>
		<argument name="needle_table">
			<description>name of table missing desired values</description>
		</argument>
	</command>
</command>