<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<command>
	<name>insert-csv</name>
	<description>inserts csv files into a given database.</description>
	<version>1.0.0</version>
	<option name="quiet">
		<short_name>-q</short_name>
		<long_name>--quiet</long_name>
		<description>supress verbose output</description>
		<action>StoreFalse</action>
	</option>
	<option name="debug">
		<short_name>-d</short_name>
		<long_name>--debug</long_name>
		<description>enables debug mode, displays the options and arguments passed to the parser</description>
		<action>StoreTrue</action>
	</option>
	<option name="variable">
		<short_name>-v</short_name>
		<long_name>--var</long_name>
		<description>enables variable mode, displays the value of all program variables</description>
		<action>StoreTrue</action>
	</option>
	<option name="test">
		<short_name>-t</short_name>
		<long_name>--test</long_name>
		<description>enables test mode, prints selection to the screen without importing csv file</description>
		<action>StoreTrue</action>
	</option>
	<option name="clear">
		<short_name>-r</short_name>
		<long_name>--clear</long_name>
		<description>clears table before importing</description>
		<action>StoreTrue</action>
	</option>
	<option name="csv_dir">
		<short_name>-c</short_name>
		<long_name>--cdir</long_name>
		<description>name of dir containing the csv files you wish to import, defaults to './csv_files' (files must be named the same name of the table you wish to import into)</description>
		<action>StoreString</action>
		<help_name>/path/to/dir</help_name>
	</option>
	<option name="files">
		<short_name>-f</short_name>
		<long_name>--files</long_name>
		<description>comma seperated list of files to import, default behavior is to import all csv files in the directory</description>
		<action>StoreString</action>
		<help_name>1,2,3...</help_name>
	</option>
	<option name="header">
		<short_name>-h</short_name>
		<long_name>--header</long_name>
		<description>comma seperated list of header fields</description>
		<action>StoreString</action>
		<help_name>header1,header2...</help_name>
	</option>
	<argument name="database">
		<description>name of the database</description>
	</argument>
</command>